---

- hosts: "{{ variable_host | default('ansible_control') }}"
  remote_user: "{{ variable_connect_as_user | default('deployuser') }}"
  gather_facts: "{{ variable_gather_facts | default('false') }}"
  become: true

  vars:
    variable_user: deadlineuser
    variable_uid: 9001
    variable_user_gid: "{{ variable_uid }}"
    variable_gid: "{{ syscontrol_gid }}"
    my_password: # If no password is defined it will not be set.
    sudo: true
    passwordless_sudo: false
  
  pre_tasks:
  - name: "Test connection as {{ ansible_user }}"
    debug:
      msg: "connection established"

  - name: Collect some facts only for ansible_distribution
    setup:
      gather_subset:
        - '!all'
        - 'min'
    tags:
    - always

  roles:
  - role: 'newuser'
  - role: 'add-user-to-group'
    vars:
      variable_group: 'syscontrol'
    when: sudo | bool

  tasks:
  - name: reset ssh connection to allow user changes to affect 'current login user'
    meta: reset_connection

# we need to ensure the new user can login

- hosts: "{{ variable_host | default('ansible_control') }}" # check login is possible as user
  remote_user: "{{ variable_connect_as_user | default('deployuser') }}"
  gather_facts: false
  become: false

  vars:
    variable_user: deadlineuser
    sudo: true

  pre_tasks:
  - name: Wait 10 seconds - Test connection for user - no sudo
    wait_for_connection:
      timeout: 10
    register: result
    failed_when: result['failed']
    become_user: "{{ variable_user }}"

- hosts: "{{ variable_host | default('ansible_control') }}" # check login is possible as user
  remote_user: "{{ variable_connect_as_user | default('deployuser') }}"
  gather_facts: true
  become: true

  vars:
    ansible_become_pass: "{{ my_password }}"
    ansible_password: "{{ my_password }}"
    variable_user: deadlineuser
    sudo: true

  pre_tasks:
  - name: Wait 10 seconds - Test connection for user - with sudo
    wait_for_connection:
      timeout: 10
    register: result
    failed_when: result['failed']
    become_user: "{{ variable_user }}"
    become: true
    when: ( sudo | bool ) and ( my_password | length > 0 )