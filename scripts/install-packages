#!/bin/bash

echo "Installing packages for AWS codebuild environment"

terraform_version="1.1.7"
terragrunt_version="0.36.0"
packer_version="1.7.2"

set -e
set -x

SOURCE=${BASH_SOURCE[0]} # resolve the script dir even if a symlink is used to this script
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTDIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
cd $SCRIPTDIR

SUDOCMD="" # replace with text sudo to use elevated permissions

# $SUDOCMD yum install -y sudo
# # This fixes yum update problems with codebuild
# $SUDOCMD yum install -y yum-utils
# $SUDOCMD yum remove -y libuv-1.39.0-1.amzn2.x86_64
# $SUDOCMD yum clean all
# $SUDOCMD rm -rf /var/cache/yum
# $SUDOCMD yum update -y

# previously python3.8 worked bt it now says no package available
echo "exclude = mirror.aarnet.edu.au" | sudo tee -a /etc/yum/pluginconf.d/fastestmirror.conf
$SUDOCMD yum install -y yum-fastestmirror # cache to fix broken mirrors.
$SUDOCMD yum install -y jq openssl python
$SUDOCMD yum install -y python3 python3-pip # for a specific python version - https://realpython.com/intro-to-pyenv/
mkdir -p $SCRIPTDIR/tmp

#: Codebuild requires python 3.8 instead of python 3.7 used in the amis for ansible to work. 
python3.8 -m pip install --upgrade pip \
    && python3.8 -m pip install --user ansible boto3 botocore \
    && export PATH=$PATH:/root/.local/bin \
    && ansible --version

if terraform --version 2> /dev/null | grep -nq "Terraform v${terraform_version}"; then
    echo 'terraform already installed'
else
    wget https://releases.hashicorp.com/terraform/${terraform_version}/terraform_${terraform_version}_linux_amd64.zip -P /tmp/ --quiet # Get terraform
    $SUDOCMD unzip /tmp/terraform_${terraform_version}_linux_amd64.zip -d /tmp/
    $SUDOCMD mv /tmp/terraform /usr/local/bin/.
fi

wget https://releases.hashicorp.com/packer/${packer_version}/packer_${packer_version}_linux_amd64.zip -P /tmp/ --quiet # Get Packer
$SUDOCMD unzip /tmp/packer_${packer_version}_linux_amd64.zip -d /tmp/
$SUDOCMD mv /tmp/packer /usr/local/bin/.

if terragrunt --version 2> /dev/null | grep -nq "terragrunt version v${terragrunt_version}"; then
    echo 'Terragrunt already installed'
else
    wget https://github.com/gruntwork-io/terragrunt/releases/download/v${terragrunt_version}/terragrunt_linux_386 -P /tmp/ --quiet # Get Terragrunt
    $SUDOCMD mv /tmp/terragrunt_linux_386 /usr/local/bin/terragrunt
    $SUDOCMD chmod +x /usr/local/bin/terragrunt
fi

mkdir -p "$HOME/.ssh/tls" # The directory to store TLS certificates in.

# echo "Resizing EBS volume..."
# $SCRIPTDIR/deploy/firehawk-main/scripts/resize.sh